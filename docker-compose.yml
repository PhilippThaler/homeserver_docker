services:
  bitwarden:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${BITWARDEN_PORT_3012}:3012
      - ${BITWARDEN_PORT_80}:80
    image: vaultwarden/server
    container_name: bitwarden
    environment:
      - ADMIN_TOKEN=${BITWARDEN_ADMIN_TOKEN}
      - DATABASE_URL=${BITWARDEN_DATABASE_URL}
      - DISABLE_ADMIN_TOKEN=${BITWARDEN_DISABLE_ADMIN_TOKEN}
      - DOMAIN=${BITWARDEN_DOMAIN}
      - ENABLE_DB_WAL=${BITWARDEN_ENABLE_DB_WAL}
      - INVITATIONS_ALLOWED=${BITWARDEN_INVITATIONS_ALLOWED}
      - SHOW_PASSWORD_HINT=${BITWARDEN_SHOW_PASSWORD_HINT}
      - SIGNUPS_ALLOWED=${BITWARDEN_SIGNUPS_ALLOWED}
      - SIGNUPS_VERIFY=${BITWARDEN_SIGNUPS_VERIFY}
      - TZ=${TZ}
      - WEBSOCKET_ENABLED=${BITWARDEN_WEBSOCKET_ENABLE}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${BITWARDEN_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/bitwarden:/data
      - ${DOCKERSTORAGEDIR}:/storage
  cloudflareddns:
    hostname: ${DOCKERHOSTNAME}
    image: cr.hotio.dev/hotio/cloudflareddns
    container_name: cloudflareddns
    environment:
      - ARGS=${CLOUDFLAREDDNS_ARGS}
      - CF_APIKEY=${CLOUDFLAREDDNS_APIKEY}
      - CF_APITOKEN=${CLOUDFLAREDDNS_APITOKEN}
      - CF_HOSTS=${CLOUDFLAREDDNS_HOSTS}
      - CF_RECORDTYPES=${CLOUDFLAREDDNS_RECORDTYPES}
      - CF_USER=${CLOUDFLAREDDNS_USER}
      - CF_ZONES=${CLOUDFLAREDDNS_ZONES}
      - DETECTION_MODE=${CLOUDFLAREDDNS_DETECTION_MODE}
      - INTERVAL=${CLOUDFLAREDDNS_INTERVAL}
      - LOG_LEVEL=${CLOUDFLAREDDNS_LOG_LEVEL}
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${CLOUDFLAREDDNS_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/cloudflareddns:/config
      - ${DOCKERSTORAGEDIR}:/storage
  grafana:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${GRAFANA_PORT_3000}:3000
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_INSTALL_PLUGINS=${GRAFANA_GF_INSTALL_PLUGINS}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${GRAFANA_RESTART}
    user: ${PUID}:${PGID}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/grafana:/var/lib/grafana
      - ${DOCKERSTORAGEDIR}:/storage
  homeassistant:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${HOMEASSISTANT_PORT_8123}:8123
    image: homeassistant/home-assistant
    container_name: homeassistant
    environment:
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${HOMEASSISTANT_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/homeassistant:/config
      - ${DOCKERSTORAGEDIR}:/storage
  jackett:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${JACKETT_PORT_9117}:9117
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${JACKETT_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/jackett:/config
      - ${DOCKERSTORAGEDIR}:/storage
  jellyfin:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${JELLYFIN_PORT_8096}:8096
      - ${JELLYFIN_PORT_8920}:8920
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${JELLYFIN_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/jellyfin:/config
      - ${DOCKERSTORAGEDIR}:/storage
      - ${JELLYFIN_TRANSCODEDIR}:/transcode
  monitorr:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${MONITORR_PORT_80}:80
    image: monitorr/monitorr
    container_name: monitorr
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${MONITORR_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/monitorr:/app
      - ${DOCKERSTORAGEDIR}:/storage
  mosquitto:
    network_mode: ${MOSQUITTO_NETWORK_MODE}
    image: eclipse-mosquitto
    container_name: mosquitto
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${MOSQUITTO_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/mosquitto:/mosquitto/config
      - ${DOCKERCONFDIR}/mosquitto/data:/mosquitto/data
      - ${DOCKERCONFDIR}/mosquitto/log:/mosquitto/log
      - ${DOCKERSTORAGEDIR}:/storage
  nextcloud:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${NEXTCLOUD_PORT_443}:443
    image: lscr.io/linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${NEXTCLOUD_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/nextcloud:/config
      - ${DOCKERSTORAGEDIR}:/storage
      - ${NEXTCLOUD_DATADIR}:/data
  nodered:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${NODERED_PORT_1880}:1880
    image: nodered/node-red
    container_name: nodered
    environment:
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${NODERED_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/nodered:/data
      - ${DOCKERSTORAGEDIR}:/storage
  ombi:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${OMBI_PORT_3579}:3579
    image: lscr.io/linuxserver/ombi
    container_name: ombi
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${OMBI_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/ombi:/config
      - ${DOCKERSTORAGEDIR}:/storage
  pihole:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${PIHOLE_PORT_443}:443
      - ${PIHOLE_PORT_80}:80
      - ${PIHOLE_SERVERIP}:${PIHOLE_PORT_53}:53
      - ${PIHOLE_SERVERIP}:${PIHOLE_PORT_53}:53/udp
      - ${PIHOLE_SERVERIP}:${PIHOLE_PORT_67}:67/udp
    image: pihole/pihole
    cap_add:
      - NET_ADMIN
    container_name: pihole
    dns:
      - 127.0.0.1
      - ${NS1}
      - ${NS2}
    environment:
      - DNS1=${NS1}
      - DNS2=${NS2}
      - ServerIP=${PIHOLE_SERVERIP}
      - TZ=${TZ}
      - WEBPASSWORD=${PIHOLE_WEBPASSWORD}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${PIHOLE_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/pihole/dnsmasq.d:/etc/dnsmasq.d
      - ${DOCKERCONFDIR}/pihole/pihole:/etc/pihole
      - ${DOCKERSTORAGEDIR}:/storage
  portainer:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${PORTAINER_PORT_9000}:9000
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    container_name: portainer
    environment:
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${PORTAINER_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERCONFDIR}/portainer:/data
      - ${DOCKERSTORAGEDIR}:/storage
  radarr:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${RADARR_PORT_7878}:7878
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${RADARR_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/radarr:/config
      - ${DOCKERSTORAGEDIR}:/storage
  rtorrentvpn:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${RTORRENTVPN_PORT_3000}:3000
      - ${RTORRENTVPN_PORT_51413}:51413
      - ${RTORRENTVPN_PORT_51413}:51413/udp
      - ${RTORRENTVPN_PORT_6881}:6881
      - ${RTORRENTVPN_PORT_6881}:6881/udp
      - ${RTORRENTVPN_PORT_8118}:8118
      - ${RTORRENTVPN_PORT_9080}:9080
      - ${RTORRENTVPN_PORT_9443}:9443
    image: ghcr.io/binhex/arch-rtorrentvpn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: rtorrentvpn
    environment:
      - ENABLE_AUTODL_IRSSI=${RTORRENTVPN_ENABLE_AUTODL_IRSSI}
      - ENABLE_FLOOD=${RTORRENTVPN_ENABLE_FLOOD}
      - ENABLE_PRIVOXY=${RTORRENTVPN_ENABLE_PRIVOXY}
      - ENABLE_RPC2_AUTH=${RTORRENTVPN_ENABLE_RPC2_AUTH}
      - ENABLE_RPC2=${RTORRENTVPN_ENABLE_RPC2}
      - ENABLE_WEBUI_AUTH=${RTORRENTVPN_ENABLE_WEBUI_AUTH}
      - LAN_NETWORK=${LAN_NETWORK}
      - NAME_SERVERS=${NS1},${NS2}
      - PGID=${PGID}
      - PHP_TZ=${TZ}
      - PUID=${PUID}
      - RPC2_PASS=${RTORRENTVPN_RPC2_PASS}
      - RPC2_USER=${RTORRENTVPN_RPC2_USER}
      - TZ=${TZ}
      - VPN_CLIENT=${VPN_CLIENT}
      - VPN_ENABLED=${VPN_ENABLE}
      - VPN_OPTIONS=${VPN_OPTIONS}
      - VPN_PASS=${VPN_PASS}
      - VPN_PROV=${VPN_PROV}
      - VPN_USER=${VPN_USER}
      - WEBUI_PASS=${RTORRENTVPN_WEBUI_PASS}
      - WEBUI_USER=${RTORRENTVPN_WEBUI_USER}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${RTORRENTVPN_RESTART}
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/rtorrentvpn:/config
      - ${DOCKERSTORAGEDIR}:/storage
      - ${VPN_OVPNDIR}:/config/openvpn
      - ${VPN_WGDIR}:/config/wireguard
  samba:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${SAMBA_PORT_137}:137/udp
      - ${SAMBA_PORT_138}:138/udp
      - ${SAMBA_PORT_139}:139
      - ${SAMBA_PORT_445}:445
    image: dperson/samba
    container_name: samba
    environment:
      - GROUPID=${PGID}
      - NMBD=${SAMBA_NMBD}
      - SHARE=${SAMBA_SHARENAME};/${SAMBA_SHARENAME};yes;no;no;all;${SAMBA_USERNAME}
      - TZ=${TZ}
      - USER=${SAMBA_USERNAME};${SAMBA_PASSWORD}
      - USERID=${PUID}
      - WORKGROUP=${SAMBA_WORKGROUP}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${SAMBA_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}:/${SAMBA_SHARENAME}/config
      - ${DOCKERSTORAGEDIR}:/${SAMBA_SHARENAME}/storage
      - ${DOCKERSTORAGEDIR}:/storage
  sonarr:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${SONARR_PORT_8989}:8989
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${SONARR_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/sonarr:/config
      - ${DOCKERSTORAGEDIR}:/storage
  swag:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${SWAG_PORT_443}:443
      - ${SWAG_PORT_80}:80
    image: lscr.io/linuxserver/swag
    cap_add:
      - NET_ADMIN
    container_name: swag
    environment:
      - DNSPLUGIN=${SWAG_DNSPLUGIN}
      - DUCKDNSTOKEN=${SWAG_DUCKDNSTOKEN}
      - EMAIL=${SWAG_EMAIL}
      - EXTRA_DOMAINS=${SWAG_EXTRA_DOMAINS}
      - ONLY_SUBDOMAINS=${SWAG_ONLY_SUBDOMAINS}
      - PGID=${PGID}
      - PUID=${PUID}
      - SUBDOMAINS=${SWAG_SUBDOMAINS}
      - TZ=${TZ}
      - URL=${SWAG_URL}
      - VALIDATION=${SWAG_VALIDATION}
      - MAXMINDDB_LICENSE_KEY=${SWAG_MAXMINDDB_LICENSE_KEY}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${SWAG_RESTART}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/swag:/config
      - ${DOCKERSTORAGEDIR}:/storage
  wireguard:
    hostname: ${DOCKERHOSTNAME}
    ports:
      - ${WIREGUARD_SERVER_PORT_51820}:${WIREGUARD_SERVER_PORT_51820}/udp
    image: lscr.io/linuxserver/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: wireguard
    environment:
      - ALLOWEDIPS=${WIREGUARD_ALLOWED_IPS}
      - INTERNAL_SUBNET=${WIREGUARD_INTERNAL_SUBNET}
      - PEERDNS=${WIREGUARD_PEER_DNS}
      - PEERS=${WIREGUARD_PEERS}
      - PGID=${PGID}
      - PUID=${PUID}
      - SERVERPORT=${WIREGUARD_SERVER_PORT_51820}
      - SERVERURL=${WIREGUARD_SERVER_URL}
      - TZ=${TZ}
    logging:
      driver: json-file
      options:
        max-file: ${DOCKERLOGGING_MAXFILE}
        max-size: ${DOCKERLOGGING_MAXSIZE}
    restart: ${WIREGUARD_RESTART}
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /lib/modules:/lib/modules
      - ${DOCKERCONFDIR}/wireguard:/config
      - ${DOCKERSTORAGEDIR}:/storage
